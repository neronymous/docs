{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Personal notes, scripts and code snippets.","title":"Home"},{"location":"WSL/create-wsl-base-image/","text":"Create Base Linux Image Prerequisites WSL Windows feature installed Ubuntu installed 1. Patch and Prep a) Bootstrap OS Open ubuntu and execute the following to patch/configure a base image: # update OS sudo apt update sudo apt upgrade --assume-yes sudo apt autoremove --assume-yes # setup brew /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" eval \" $( /home/linuxbrew/.linuxbrew/bin/brew shellenv ) \" # install common tools brew install git gpg gcc b) Setup wsl.conf Create (with sudo) an /etc/wsl.conf file with the following content: [user] default=nero [automount] enabled = true mountFsTab = false [network] generateHosts = true generateResolvConf = true 2. Customise Shell a) Install ZSH, oh-my-zsh and powerlevel9k theme brew install zsh # install oh-my-zsh sh -c \" $( curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" # install powerlevel9k theme git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k b) Configure ZSH # enable brew echo 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' >> ~/.zprofile mkdir -p -m 700 ~/.ssh mkdir -p ~/.config/zsh rm ~/.zshrc Create a new ~/.zshrc with the following content: export ZSH=$HOME/.oh-my-zsh export ZDOTDIR=$HOME/.config/zsh ZSH_THEME=\"powerlevel9k/powerlevel9k\" POWERLEVEL9K_DIR_DEFAULT_BACKGROUND=\"yellow\" POWERLEVEL9K_DIR_HOME_BACKGROUND=\"037\" POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND=\"cyan\" POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs) POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status) POWERLEVEL9K_STATUS_OK=\"false\" # OPTIONS unsetopt NOMATCH CASE_SENSITIVE=\"false\" # PLUGIN CONFIG plugins=( docker docker-compose gpg-agent ssh-agent ) source $ZSH/oh-my-zsh.sh c) Change Default Shell command -v zsh | sudo tee -a /etc/shells chsh -s $( which zsh ) # reload shell source ~/.zshrc 3. Cleanup Redundant/Temp Files brew cleanup --prune = all -s rm -rf $( brew --cache ) rm -rf ~/.landscape rm ~/.bash* ~/.profile ~/.motd_shown ~/.zcompdump-* ~/.zsh_history 4. Export Image to File Open a command prompt and execute the following, replacing the ISO date with today's date. wsl --export < DISTRO > ./ < DISTRO > -base-YYYY-MM-DD.tar.gz 5. Cleanup wsl --unregister < DISTRO>","title":"Create Base Linux Image"},{"location":"WSL/create-wsl-base-image/#create-base-linux-image","text":"","title":"Create Base Linux Image"},{"location":"WSL/create-wsl-base-image/#prerequisites","text":"WSL Windows feature installed Ubuntu installed","title":"Prerequisites"},{"location":"WSL/create-wsl-base-image/#1-patch-and-prep","text":"","title":"1. Patch and Prep"},{"location":"WSL/create-wsl-base-image/#a-bootstrap-os","text":"Open ubuntu and execute the following to patch/configure a base image: # update OS sudo apt update sudo apt upgrade --assume-yes sudo apt autoremove --assume-yes # setup brew /bin/bash -c \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh ) \" eval \" $( /home/linuxbrew/.linuxbrew/bin/brew shellenv ) \" # install common tools brew install git gpg gcc","title":"a) Bootstrap OS"},{"location":"WSL/create-wsl-base-image/#b-setup-wslconf","text":"Create (with sudo) an /etc/wsl.conf file with the following content: [user] default=nero [automount] enabled = true mountFsTab = false [network] generateHosts = true generateResolvConf = true","title":"b) Setup wsl.conf"},{"location":"WSL/create-wsl-base-image/#2-customise-shell","text":"","title":"2. Customise Shell"},{"location":"WSL/create-wsl-base-image/#a-install-zsh-oh-my-zsh-and-powerlevel9k-theme","text":"brew install zsh # install oh-my-zsh sh -c \" $( curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh ) \" # install powerlevel9k theme git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k","title":"a) Install ZSH, oh-my-zsh and powerlevel9k theme"},{"location":"WSL/create-wsl-base-image/#b-configure-zsh","text":"# enable brew echo 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' >> ~/.zprofile mkdir -p -m 700 ~/.ssh mkdir -p ~/.config/zsh rm ~/.zshrc Create a new ~/.zshrc with the following content: export ZSH=$HOME/.oh-my-zsh export ZDOTDIR=$HOME/.config/zsh ZSH_THEME=\"powerlevel9k/powerlevel9k\" POWERLEVEL9K_DIR_DEFAULT_BACKGROUND=\"yellow\" POWERLEVEL9K_DIR_HOME_BACKGROUND=\"037\" POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND=\"cyan\" POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs) POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status) POWERLEVEL9K_STATUS_OK=\"false\" # OPTIONS unsetopt NOMATCH CASE_SENSITIVE=\"false\" # PLUGIN CONFIG plugins=( docker docker-compose gpg-agent ssh-agent ) source $ZSH/oh-my-zsh.sh","title":"b) Configure ZSH"},{"location":"WSL/create-wsl-base-image/#c-change-default-shell","text":"command -v zsh | sudo tee -a /etc/shells chsh -s $( which zsh ) # reload shell source ~/.zshrc","title":"c) Change Default Shell"},{"location":"WSL/create-wsl-base-image/#3-cleanup-redundanttemp-files","text":"brew cleanup --prune = all -s rm -rf $( brew --cache ) rm -rf ~/.landscape rm ~/.bash* ~/.profile ~/.motd_shown ~/.zcompdump-* ~/.zsh_history","title":"3. Cleanup Redundant/Temp Files"},{"location":"WSL/create-wsl-base-image/#4-export-image-to-file","text":"Open a command prompt and execute the following, replacing the ISO date with today's date. wsl --export < DISTRO > ./ < DISTRO > -base-YYYY-MM-DD.tar.gz","title":"4. Export Image to File"},{"location":"WSL/create-wsl-base-image/#5-cleanup","text":"wsl --unregister < DISTRO>","title":"5. Cleanup"},{"location":"WSL/create-wsl-instance/","text":"Create WSL Instance from Base Image Prerequisites WSL Windows feature installed Exported base image as per base image setup 1. Import Base Image Open a command prompt and execute the following command, replacing the <DISTRO> , <NAME> with whatever you want to call the instance. wsl --import < NAME > %LOCALAPPDATA% \\Packages\\ < NAME > <BASE_IMAGE_PATH> wsl -d < NAME>","title":"Create WSL Instance from Base Image"},{"location":"WSL/create-wsl-instance/#create-wsl-instance-from-base-image","text":"","title":"Create WSL Instance from Base Image"},{"location":"WSL/create-wsl-instance/#prerequisites","text":"WSL Windows feature installed Exported base image as per base image setup","title":"Prerequisites"},{"location":"WSL/create-wsl-instance/#1-import-base-image","text":"Open a command prompt and execute the following command, replacing the <DISTRO> , <NAME> with whatever you want to call the instance. wsl --import < NAME > %LOCALAPPDATA% \\Packages\\ < NAME > <BASE_IMAGE_PATH> wsl -d < NAME>","title":"1. Import Base Image"}]}